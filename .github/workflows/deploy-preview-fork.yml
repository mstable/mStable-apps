name: Deploy preview

on:
  pull_request_target:
    branches: [master]

jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
      - name: Approve
        run: echo For security reasons, all pull requests need to be approved first before running any automated CI.
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "‚ö†Ô∏è Public fork waiting for approval, check it in github: https://github.com/mstable/mStable-apps/pulls"

  build_and_preview_protocol:
    runs-on: ubuntu-latest
    needs: [approve]
    environment:
      name: Integrate PR
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - run: yarn install
      - run: yarn codegen:typechain
      - run: yarn nx run-many --all --parallel --target=lint
      - run: yarn nx run protocol:build --prod
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: protocol_deploy
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_APPS_PROTOCOL }}"
          expires: 30d
          projectId: apps-protocol-af0f6
          entryPoint: apps/protocol
          target: apps-protocol-af0f6
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            :rocket: Deploy protocol app on ${{ steps.protocol_deploy.outputs.details_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_includes: "Deploy protocol"
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "‚ú® New staging mStable protocol app from public fork üöÄ Deploy url: ${{ steps.protocol_deploy.outputs.details_url }}"

  build_and_preview_governance:
    runs-on: ubuntu-latest
    needs: [approve]
    environment:
      name: Integrate PR
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - run: yarn install
      - run: yarn nx run-many --all --parallel --target=lint
      - run: yarn codegen:typechain
      - run: yarn nx run governance:build --prod
      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: governance_deploy
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_APPS_STAKING }}"
          expires: 30d
          projectId: apps-staking
          entryPoint: apps/governance
          target: apps-staking
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            :rocket: Deploy governance app on ${{ steps.governance_deploy.outputs.details_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_includes: "Deploy governance"
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: "‚ú® New staging mStable governance app from public fork üöÄ Deploy url: ${{ steps.governance_deploy.outputs.details_url }}"
